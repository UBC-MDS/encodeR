% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cat_boost_encoder.R
\name{cat_boost_encoder}
\alias{cat_boost_encoder}
\title{cat_boost_encoder}
\usage{
cat_boost_encoder(
  X_train,
  X_test,
  y,
  n_permutations,
  cat_columns,
  prior,
  objective = "regression"
)
}
\arguments{
\item{X_train}{A tibble representing the training data set containing some categorical features/columns.}

\item{X_test}{A tibble representing the test set, containing some set of categorical features/columns.}

\item{y}{A numeric vector or character vector representing the target variable. If the objective is "binary", then the vector
should only contain two unique values.}

\item{n_permutations}{An integer representing the number of permutations to use when calculating
the encodings.}

\item{cat_columns}{A character vector containing the names of the categorical columns in the tibble
that should be encoding.}

\item{prior}{A number in [0, inf] that acts as pseudo counts when calculating the encodings. Useful for
preventing encodings of 0 for when the training set does not have particular categories observed
in the test set. A larger value gives less weight to what is observed in the training set. A value
of 0 incorporates no prior information.}

\item{objective}{A string, either "regression" or "binary" specifying the problem. Default is regression.
For regression, only the uniform quantization method is incorporated here for simplicity.}
}
\value{
A list containing with processed training and test sets, in which the named categorical
columns are replaced with their encodings.
}
\description{
This function encodes categorical variables using conditional averages of the target variable per
category. This differs from regular target encoding, however, in that the encodings are calculated in a
sequential fashion per each row, and then averaged over many permutations.
}
\examples{
catboost_encoder(
my_train,
my_test,
my_train$y,
n_permutations = 50,
cat_columns = c("foo"),
prior = 0.05,
objective = "regression")
}
